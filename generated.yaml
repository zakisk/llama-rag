apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  generateName: pr-run-
  annotations:
    pipelinesascode.tekton.dev/on-cel-expression: 'event == "pull_request" && target_branch == "main"'
spec:
  params:
    - name: git-url
      value: '{{ source_url }}'
    - name: image-url
      value: 'quay.io/user/repo:{{ revision }}'
  pipelineSpec:
    params:
      - name: git-url
        type: string
      - name: image-url
        type: string
    workspaces:
      - name: source
    tasks:
      - name: clone
        params:
          - name: url
            value: $(params.git-url)
        workspaces:
          - name: output
            workspace: source
        taskSpec:
          params:
            - name: url
              type: string
          workspaces:
            - name: output
          steps:
            - name: clone-repo
              image: alpine/git:v2.43.0
              script: |
                git clone $(params.url) .
              workingDir: $(workspaces.output.path)

      - name: test
        runAfter: [clone]
        workspaces:
          - name: source
            workspace: source
        taskSpec:
          workspaces:
            - name: source
          steps:
            - name: run-tests
              image: golang:1.21-alpine
              script: |
                go test ./...
              workingDir: $(workspaces.source.path)

      - name: build
        runAfter: [test]
        params:
          - name: image
            value: $(params.image-url)
        workspaces:
          - name: source
            workspace: source
        taskSpec:
          params:
            - name: image
              type: string
          workspaces:
            - name: source
          steps:
            - name: build-and-push-image
              image: quay.io/buildah/stable:v1.35.4
              workingDir: $(workspaces.source.path)
              script: |
                buildah bud -f Dockerfile -t $(params.image) .
                buildah push $(params.image) docker://$(params.image)
              securityContext:
                runAsUser: 0
  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi